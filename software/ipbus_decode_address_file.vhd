---------------------------------------------------------------------------------
-- Address decode logic for IPbus fabric.
--
-- This file has been AUTOGENERATED from the address table - do not
-- hand edit.
--
-- We assume the synthesis tool is clever enough to recognise
-- exclusive conditions in the if statement.
---------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

package ipbus_decode_address_file is

-- START automatically generated VHDL (Tue Sep  3 10:13:25 2024)
  constant IPBUS_SEL_WIDTH: positive := 3;
-- END automatically generated VHDL

  subtype ipbus_sel_t is std_logic_vector(IPBUS_SEL_WIDTH - 1 downto 0);
  function ipbus_sel_address_file(addr : in std_logic_vector(31 downto 0)) return ipbus_sel_t;

-- START automatically generated VHDL (Tue Sep  3 10:13:25 2024)
  constant N_SLV_CSR: integer := 0;
  constant N_SLV_RESET_REG: integer := 1;
  constant N_SLV_INPUT_RAM: integer := 2;
  constant N_SLV_U_T_RAM: integer := 3;
  constant N_SLAVES: integer := 4;
-- END automatically generated VHDL

end ipbus_decode_address_file;

package body ipbus_decode_address_file is

  function ipbus_sel_address_file(addr : in std_logic_vector(31 downto 0)) return ipbus_sel_t is
    variable sel: ipbus_sel_t;
  begin

-- START automatically generated VHDL (Tue Sep  3 10:13:25 2024)
    if    std_match(addr, "--------------00--------------0-") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_CSR, IPBUS_SEL_WIDTH)); -- csr / base 0x00000000 / mask 0x00030002
    elsif std_match(addr, "--------------00--------------1-") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_RESET_REG, IPBUS_SEL_WIDTH)); -- reset_reg / base 0x00000002 / mask 0x00030002
    elsif std_match(addr, "--------------01----------------") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_INPUT_RAM, IPBUS_SEL_WIDTH)); -- input_ram / base 0x00010000 / mask 0x00030000
    elsif std_match(addr, "--------------10----------------") then
      sel := ipbus_sel_t(to_unsigned(N_SLV_U_T_RAM, IPBUS_SEL_WIDTH)); -- U_T_ram / base 0x00020000 / mask 0x00030000
    else
        sel := ipbus_sel_t(to_unsigned(N_SLAVES, IPBUS_SEL_WIDTH));
    end if;
-- END automatically generated VHDL

    return sel;

  end function ipbus_sel_address_file;

end ipbus_decode_address_file;

---------------------------------------------------------------------------------
